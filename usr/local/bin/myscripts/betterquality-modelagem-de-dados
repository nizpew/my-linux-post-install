#!/bin/python3
import os
import cv2
import numpy as np
import pytesseract
from PIL import Image, ImageEnhance, ImageFilter

def preprocess_image(image_path, save_path=None):
    # Open the image using PIL
    img = Image.open(image_path)

    # Convert the image to grayscale
    img = img.convert('L')

    # Increase contrast
    enhancer = ImageEnhance.Contrast(img)
    img = enhancer.enhance(1.5)  # Increase contrast by a factor of 1.5

    # Apply Gaussian blur to reduce noise
    img = img.filter(ImageFilter.GaussianBlur(radius=2))

    # Convert PIL image to numpy array
    img_array = np.array(img)

    # Apply adaptive thresholding to binarize the image
    img_thresh = cv2.adaptiveThreshold(img_array, 255, cv2.ADAPTIVE_THRESH_MEAN_C, cv2.THRESH_BINARY_INV, 11, 4)

    # Convert the numpy array back to PIL image
    img_enhanced = Image.fromarray(img_thresh)

    # Save the preprocessed image if save_path is provided
    if save_path:
        img_enhanced.save(save_path)

    return img_enhanced

def extract_text_from_image(image_path):
    if not os.path.exists(image_path):
        raise FileNotFoundError(f"Image file not found at path: {image_path}")

    # Preprocess the image
    save_path = os.path.join(os.path.dirname(image_path), "preprocessed_image.png")
    img = preprocess_image(image_path, save_path=save_path)

    # Extract text from the preprocessed image
    text = pytesseract.image_to_string(img, lang='por')

    return text.strip()

if __name__ == "__main__":
    image_path = "./Downloads/uni/Screenshot.png"  # Adjust the file path
    extracted_text = extract_text_from_image(image_path)
    print("Extracted Text:")
    print(extracted_text)

