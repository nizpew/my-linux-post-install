#!/bin/bash

# Caminho do arquivo que vai armazenar o último intervalo utilizado
FILE_LAST_INTERVAL="last_interval.txt"

# Verifica se o arquivo existe, caso contrário, inicializa com o intervalo 1-5
if [ ! -f "$FILE_LAST_INTERVAL" ]; then
  echo "1-5" > "$FILE_LAST_INTERVAL"
fi

# Lê o último intervalo salvo no arquivo
LAST_INTERVAL=$(cat "$FILE_LAST_INTERVAL")

# Extrai os números do intervalo (ex: "1-5" vira 1 e 5)
START=$(echo $LAST_INTERVAL | cut -d '-' -f 1)
END=$(echo $LAST_INTERVAL | cut -d '-' -f 2)

# Calcula o novo intervalo (ex: de 1-5 para 5-10, de 10-15 para 15-20, etc.)
NEW_START=$END
NEW_END=$((END + 5))  # Agora incrementa de 5 em 5

# Salva o novo intervalo no arquivo
echo "$NEW_START-$NEW_END" > "$FILE_LAST_INTERVAL"

# Exemplo do comando original com o novo intervalo
COMMAND="bible leviticus3:$NEW_START-$NEW_END"

# Executa a consulta para o intervalo atual
RESULT=$(eval $COMMAND)

# Executa a consulta apenas para o novo START (início do intervalo)
FIRST_RESULT=$(bible leviticus3:$NEW_START)

# Verifica se o conteúdo do intervalo atual é igual ao conteúdo do primeiro número do intervalo
if [ "$RESULT" == "$FIRST_RESULT" ]; then
  echo "need to change bible book"
  rm last_interval.txt
else
  # Caso contrário, executa o comando normalmente
  ##echo "Executando: $COMMAND | tgpt -q -w \"sumarize in 4 lines\" ; $COMMAND | tgpt -q -w \"sumarize in 4 lines\" | espeak ; $COMMAND"
  
  # Aqui você poderia executar o comando real, caso deseje:
  eval "$COMMAND | tgpt -q -w \"sumarize in 4 bullet points\" ; $COMMAND | tgpt -q -w \"sumarize in 4 bullet points\" | espeak ; $COMMAND"
fi

